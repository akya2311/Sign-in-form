{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\Desktop\\\\emplyee management 3\\\\myapp\\\\src\\\\Component\\\\EmployeeList\\\\EmployeeList.js\";\nimport Cookies from 'js-cookie';\nimport React, { Component } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\nclass EmployeeList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: [],\n      apiStatus: apiStatusConstants.initial\n    };\n    this.componentDidMount = () => {\n      this.fetchEmployee();\n    };\n    this.fetchEmployee = async () => {\n      const jwtToken = Cookies.get('jwt_token');\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const option = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      try {\n        const response = await fetch('/api/employees/', option);\n        console.log;\n        if (!response.ok) {\n          this.setState({\n            apiStatus: apiStatusConstants.failure\n          });\n          throw new Error('Error fetching employees');\n        }\n        const data = await response.json();\n        this.setState({\n          employees: data,\n          apiStatus: apiStatusConstants.success\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n        color: \"#0b69ff\",\n        height: 70,\n        width: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://assets.ccbp.in/frontend/react-js/nxt-trendz/nxt-trendz-products-error-view.png\",\n        alt: \"all-products-error\",\n        className: \"products-failure-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"product-failure-heading-text\",\n        children: \"Oops! Something Went Wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"products-failure-description\",\n        children: \"We are having some trouble processing your request. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n    this.renderEmployeeView = () => {\n      const {\n        employees\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Employee List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          style: {\n            fontFamily: 'Arial, sans-serif'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  color: '#333',\n                  // Dark gray color\n                  fontWeight: 'bold',\n                  // Bold font weight\n                  fontFamily: 'Arial, sans-serif' // Font family\n                },\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  color: '#333',\n                  // Dark gray color\n                  fontWeight: 'bold',\n                  // Bold font weight\n                  fontFamily: 'Arial, sans-serif' // Font family\n                },\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  color: '#333',\n                  // Dark gray color\n                  fontWeight: 'bold',\n                  // Bold font weight\n                  fontFamily: 'Arial, sans-serif' // Font family\n                },\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  color: '#555',\n                  fontWeight: 'bold'\n                },\n                children: employee.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  color: '#555',\n                  fontFamily: 'Arial, sans-serif'\n                },\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  color: '#555',\n                  fontStyle: 'italic'\n                },\n                children: employee.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this);\n    };\n    this.renderAllView = () => {\n      const {\n        apiStatus\n      } = this.state;\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderEmployeeView();\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n        default:\n          return null;\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAllView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default EmployeeList;","map":{"version":3,"names":["Cookies","React","Component","ThreeDots","jsxDEV","_jsxDEV","apiStatusConstants","initial","success","failure","inProgress","EmployeeList","constructor","args","state","employees","apiStatus","componentDidMount","fetchEmployee","jwtToken","get","setState","option","headers","Authorization","method","response","fetch","console","log","ok","Error","data","json","error","renderLoadingView","className","children","color","height","width","fileName","_jsxFileName","lineNumber","columnNumber","renderFailureView","src","alt","renderEmployeeView","style","fontFamily","fontWeight","map","employee","id","name","fontStyle","position","renderAllView","render"],"sources":["C:/Users/aksha/Desktop/emplyee management 3/myapp/src/Component/EmployeeList/EmployeeList.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\nimport React, { Component } from 'react';\r\nimport { ThreeDots } from 'react-loader-spinner';\r\n\r\nconst apiStatusConstants = {\r\n    initial: 'INITIAL',\r\n    success: 'SUCCESS',\r\n    failure: 'FAILURE',\r\n    inProgress: 'IN_PROGRESS',\r\n}\r\n\r\nclass EmployeeList extends Component {\r\n    state = {\r\n        employees: [],\r\n        apiStatus: apiStatusConstants.initial,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchEmployee();\r\n    }\r\n\r\n    fetchEmployee = async () => {\r\n        const jwtToken = Cookies.get('jwt_token')\r\n        this.setState({\r\n            apiStatus: apiStatusConstants.inProgress,\r\n        })\r\n        const option = {\r\n            headers: {\r\n                Authorization: `Bearer ${jwtToken}`,\r\n            },\r\n            method: 'GET'\r\n        }\r\n        try {\r\n            const response = await fetch('/api/employees/', option);\r\n            console.log\r\n            if (!response.ok) {\r\n                this.setState({\r\n                    apiStatus: apiStatusConstants.failure,\r\n                })\r\n                throw new Error('Error fetching employees')\r\n            }\r\n            const data = await response.json()\r\n            this.setState({ employees: data, apiStatus: apiStatusConstants.success })\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    renderLoadingView = () => (\r\n        <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n            <ThreeDots color=\"#0b69ff\" height={70} width={70} />\r\n        </div>\r\n    )\r\n\r\n    renderFailureView = () => (\r\n        <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n            <img\r\n                src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz/nxt-trendz-products-error-view.png\"\r\n                alt=\"all-products-error\"\r\n                className=\"products-failure-img\"\r\n            />\r\n            <h1 className=\"product-failure-heading-text\">\r\n                Oops! Something Went Wrong\r\n            </h1>\r\n            <p className=\"products-failure-description\">\r\n                We are having some trouble processing your request. Please try again.\r\n            </p>\r\n        </div>\r\n    )\r\n\r\n    renderEmployeeView = () => {\r\n        const { employees } = this.state\r\n        return (\r\n            <div>\r\n                <h2>Employee List</h2>\r\n                <table className=\"table\" style={{ fontFamily: 'Arial, sans-serif' }}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th style={{ \r\n                            color: '#333', // Dark gray color\r\n                            fontWeight: 'bold', // Bold font weight\r\n                            fontFamily: 'Arial, sans-serif' // Font family\r\n                        }}>ID</th>\r\n                        <th style={{ \r\n                            color: '#333', // Dark gray color\r\n                            fontWeight: 'bold', // Bold font weight\r\n                            fontFamily: 'Arial, sans-serif' // Font family\r\n                        }}>Name</th>\r\n                        <th style={{ \r\n                            color: '#333', // Dark gray color\r\n                            fontWeight: 'bold', // Bold font weight\r\n                            fontFamily: 'Arial, sans-serif' // Font family\r\n                        }}>Position</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employees.map(employee => (\r\n                            <tr key={employee.id}>\r\n                            <td style={{ color: '#555', fontWeight: 'bold' }}>{employee.id}</td>\r\n                            <td style={{ color: '#555', fontFamily: 'Arial, sans-serif' }}>{employee.name}</td>\r\n                            <td style={{ color: '#555', fontStyle: 'italic' }}>{employee.position}</td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderAllView = () => {\r\n        const { apiStatus } = this.state\r\n\r\n        switch (apiStatus) {\r\n            case apiStatusConstants.success:\r\n                return this.renderEmployeeView()\r\n            case apiStatusConstants.failure:\r\n                return this.renderFailureView()\r\n            case apiStatusConstants.inProgress:\r\n                return this.renderLoadingView()\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderAllView()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,kBAAkB,GAAG;EACvBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,YAAY,SAAST,SAAS,CAAC;EAAAU,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACjCC,KAAK,GAAG;MACJC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAEV,kBAAkB,CAACC;IAClC,CAAC;IAAA,KAEDU,iBAAiB,GAAG,MAAM;MACtB,IAAI,CAACC,aAAa,CAAC,CAAC;IACxB,CAAC;IAAA,KAEDA,aAAa,GAAG,YAAY;MACxB,MAAMC,QAAQ,GAAGnB,OAAO,CAACoB,GAAG,CAAC,WAAW,CAAC;MACzC,IAAI,CAACC,QAAQ,CAAC;QACVL,SAAS,EAAEV,kBAAkB,CAACI;MAClC,CAAC,CAAC;MACF,MAAMY,MAAM,GAAG;QACXC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASL,QAAS;QACtC,CAAC;QACDM,MAAM,EAAE;MACZ,CAAC;MACD,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAEL,MAAM,CAAC;QACvDM,OAAO,CAACC,GAAG;QACX,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UACd,IAAI,CAACT,QAAQ,CAAC;YACVL,SAAS,EAAEV,kBAAkB,CAACG;UAClC,CAAC,CAAC;UACF,MAAM,IAAIsB,KAAK,CAAC,0BAA0B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAI,CAACZ,QAAQ,CAAC;UAAEN,SAAS,EAAEiB,IAAI;UAAEhB,SAAS,EAAEV,kBAAkB,CAACE;QAAQ,CAAC,CAAC;MAC7E,CAAC,CAAC,OAAO0B,KAAK,EAAE;QACZN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAAA,KAEDC,iBAAiB,GAAG,mBAChB9B,OAAA;MAAK+B,SAAS,EAAC,yDAAyD;MAAAC,QAAA,eACpEhC,OAAA,CAACF,SAAS;QAACmC,KAAK,EAAC,SAAS;QAACC,MAAM,EAAE,EAAG;QAACC,KAAK,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CACR;IAAA,KAEDC,iBAAiB,GAAG,mBAChBxC,OAAA;MAAK+B,SAAS,EAAC,yDAAyD;MAAAC,QAAA,gBACpEhC,OAAA;QACIyC,GAAG,EAAC,wFAAwF;QAC5FC,GAAG,EAAC,oBAAoB;QACxBX,SAAS,EAAC;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFvC,OAAA;QAAI+B,SAAS,EAAC,8BAA8B;QAAAC,QAAA,EAAC;MAE7C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLvC,OAAA;QAAG+B,SAAS,EAAC,8BAA8B;QAAAC,QAAA,EAAC;MAE5C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;IAAA,KAEDI,kBAAkB,GAAG,MAAM;MACvB,MAAM;QAAEjC;MAAU,CAAC,GAAG,IAAI,CAACD,KAAK;MAChC,oBACIT,OAAA;QAAAgC,QAAA,gBACIhC,OAAA;UAAAgC,QAAA,EAAI;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBvC,OAAA;UAAO+B,SAAS,EAAC,OAAO;UAACa,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAoB,CAAE;UAAAb,QAAA,gBAChEhC,OAAA;YAAAgC,QAAA,eACAhC,OAAA;cAAAgC,QAAA,gBACIhC,OAAA;gBAAI4C,KAAK,EAAE;kBACPX,KAAK,EAAE,MAAM;kBAAE;kBACfa,UAAU,EAAE,MAAM;kBAAE;kBACpBD,UAAU,EAAE,mBAAmB,CAAC;gBACpC,CAAE;gBAAAb,QAAA,EAAC;cAAE;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACVvC,OAAA;gBAAI4C,KAAK,EAAE;kBACPX,KAAK,EAAE,MAAM;kBAAE;kBACfa,UAAU,EAAE,MAAM;kBAAE;kBACpBD,UAAU,EAAE,mBAAmB,CAAC;gBACpC,CAAE;gBAAAb,QAAA,EAAC;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACZvC,OAAA;gBAAI4C,KAAK,EAAE;kBACPX,KAAK,EAAE,MAAM;kBAAE;kBACfa,UAAU,EAAE,MAAM;kBAAE;kBACpBD,UAAU,EAAE,mBAAmB,CAAC;gBACpC,CAAE;gBAAAb,QAAA,EAAC;cAAQ;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACRvC,OAAA;YAAAgC,QAAA,EACKtB,SAAS,CAACqC,GAAG,CAACC,QAAQ,iBACnBhD,OAAA;cAAAgC,QAAA,gBACAhC,OAAA;gBAAI4C,KAAK,EAAE;kBAAEX,KAAK,EAAE,MAAM;kBAAEa,UAAU,EAAE;gBAAO,CAAE;gBAAAd,QAAA,EAAEgB,QAAQ,CAACC;cAAE;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpEvC,OAAA;gBAAI4C,KAAK,EAAE;kBAAEX,KAAK,EAAE,MAAM;kBAAEY,UAAU,EAAE;gBAAoB,CAAE;gBAAAb,QAAA,EAAEgB,QAAQ,CAACE;cAAI;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnFvC,OAAA;gBAAI4C,KAAK,EAAE;kBAAEX,KAAK,EAAE,MAAM;kBAAEkB,SAAS,EAAE;gBAAS,CAAE;gBAAAnB,QAAA,EAAEgB,QAAQ,CAACI;cAAQ;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAHlES,QAAQ,CAACC,EAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIpB,CACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAEd,CAAC;IAAA,KAEDc,aAAa,GAAG,MAAM;MAClB,MAAM;QAAE1C;MAAU,CAAC,GAAG,IAAI,CAACF,KAAK;MAEhC,QAAQE,SAAS;QACb,KAAKV,kBAAkB,CAACE,OAAO;UAC3B,OAAO,IAAI,CAACwC,kBAAkB,CAAC,CAAC;QACpC,KAAK1C,kBAAkB,CAACG,OAAO;UAC3B,OAAO,IAAI,CAACoC,iBAAiB,CAAC,CAAC;QACnC,KAAKvC,kBAAkB,CAACI,UAAU;UAC9B,OAAO,IAAI,CAACyB,iBAAiB,CAAC,CAAC;QACnC;UACI,OAAO,IAAI;MACnB;IACJ,CAAC;EAAA;EAEDwB,MAAMA,CAAA,EAAG;IACL,oBACItD,OAAA;MAAAgC,QAAA,EACK,IAAI,CAACqB,aAAa,CAAC;IAAC;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEd;AAEJ;AAEA,eAAejC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
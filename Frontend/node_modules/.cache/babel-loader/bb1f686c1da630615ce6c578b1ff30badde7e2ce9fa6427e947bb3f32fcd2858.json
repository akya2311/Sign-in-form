{"ast":null,"code":"/**\n * 本文件用于loader的实现\n */\n\n/*!\n * Dependencies\n */\nvar path = require('path');\n\n/**\n * 静态资源加载器\n * @param js 压缩js路径\n * @param css 压缩css路径\n */\nvar Loader = function (js, css) {\n  if (!(this instanceof Loader)) {\n    return new Loader(js, css);\n  }\n  var target = {};\n  if (js) {\n    target[path.extname(js)] = js;\n  }\n  if (css) {\n    target[path.extname(css)] = css;\n  }\n  this.script = {\n    assets: [],\n    target: target[\".js\"]\n  };\n  this.style = {\n    assets: [],\n    target: target[\".css\"]\n  };\n};\n\n/**\n * 加载js文件\n * @param {String} src js文件相对项目根目录的路径\n */\nLoader.prototype.js = function (src) {\n  this.script.assets.push(src);\n  return this;\n};\n\n/**\n * 加载css文件\n * @param {String} href css文件相对项目根目录的路径\n */\nLoader.prototype.css = function (href) {\n  this.style.assets.push(href);\n  return this;\n};\nvar timestamp = new Date().getTime();\n\n/**\n * 生成开发环境下的标签\n */\nLoader.prototype.dev = function (prefix) {\n  var html = '';\n  prefix = prefix || '';\n  var version = '?v=' + timestamp;\n  var i;\n  for (i = 0; i < this.script.assets.length; i++) {\n    html += '<script src=\"' + prefix + this.script.assets[i] + version + '\"></script>\\n';\n  }\n  for (i = 0; i < this.style.assets.length; i++) {\n    html += '<link rel=\"stylesheet\" href=\"' + prefix + this.style.assets[i] + version + '\" media=\"all\" />\\n';\n  }\n  return html;\n};\n\n/**\n * 生成线上环境下的标签\n * @param {Object} CDNMap 通过Loader.scanDir() => Loader.minify() => Loader.map()得到的map文件\n * @param {String} prefix CDN前缀。如有CDN，可以一键切换文件到CDN中\n */\nLoader.prototype.pro = function (CDNMap, prefix) {\n  prefix = prefix || '';\n  var html = '';\n  var scriptTarget = this.script.target;\n  if (scriptTarget && CDNMap[scriptTarget]) {\n    html += '<script src=\"' + prefix + CDNMap[scriptTarget] + '\"></script>\\n';\n  }\n  var styleTarget = this.style.target;\n  if (styleTarget && CDNMap[styleTarget]) {\n    html += '<link rel=\"stylesheet\" href=\"' + prefix + CDNMap[styleTarget] + '\" media=\"all\" />\\n';\n  }\n  return html;\n};\n\n/**\n * 根据环境和版本号去生成对应标签\n * 如果env没有传入，将取`process.env.NODE_ENV`作为判断，`production`为产品环境，其余将采用原始版本\n * @param {Object} CDNMap 通过Loader.scanDir() => Loader.minify() => Loader.map()得到的map文件\n * @param {String} prefix CDN前缀。如有CDN，可以一键切换文件到CDN中\n * @param {Boolean} env 是否启用压缩版\n */\nLoader.prototype.done = function (CDNMap, prefix, mini) {\n  // 优先级：1. 参数传入 2. 全局\n  CDNMap = CDNMap || Loader.CDNMap || {};\n\n  // prefix: 1. 参数传入 2. this.prefix 3. 全局\n  if (prefix === undefined) {\n    // 可能传入 ''\n    prefix = this.prefix;\n  }\n  if (prefix === undefined) {\n    prefix = Loader.prefix;\n  }\n  if (prefix && prefix.endsWith('/')) {\n    prefix = prefix.slice(0, -1);\n  }\n\n  // mode\n  var mode;\n  if (mini !== undefined) {\n    // 可能传入 0\n    mode = mini;\n  } else if (this.mini !== undefined) {\n    mode = this.mini;\n  } else if (Loader.mini !== undefined) {\n    mode = Loader.mini;\n  } else {\n    mode = process.env.NODE_ENV === \"production\";\n  }\n  return mode ? this.pro(CDNMap, prefix) : this.dev(prefix);\n};\nvar File = function (target) {\n  this.target = target;\n};\nFile.prototype.done = function (CDNMap, prefix, hashed) {\n  // 优先级：1. 参数传入 2. 全局\n  CDNMap = CDNMap || Loader.CDNMap || {};\n\n  // prefix: 1. 参数传入 2. 全局\n  if (prefix === undefined) {\n    // 可能传入 ''\n    prefix = this.prefix;\n  }\n  if (prefix === undefined) {\n    prefix = Loader.prefix;\n  }\n  if (prefix && prefix.endsWith('/')) {\n    prefix = prefix.slice(0, -1);\n  }\n  prefix = prefix || '';\n\n  // mode\n  var mode;\n  if (hashed !== undefined) {\n    // 可能传入 0\n    mode = hashed;\n  } else if (Loader.mini !== undefined) {\n    mode = Loader.mini;\n  } else {\n    mode = process.env.NODE_ENV === \"production\";\n  }\n  return prefix + (mode ? CDNMap[this.target] : this.target);\n};\nLoader.file = function (target) {\n  return new File(target);\n};\nmodule.exports = Loader;","map":{"version":3,"names":["path","require","Loader","js","css","target","extname","script","assets","style","prototype","src","push","href","timestamp","Date","getTime","dev","prefix","html","version","i","length","pro","CDNMap","scriptTarget","styleTarget","done","mini","undefined","endsWith","slice","mode","process","env","NODE_ENV","File","hashed","file","module","exports"],"sources":["C:/Users/aksha/Desktop/emplyee management 3/myapp/node_modules/loader/lib/loader.js"],"sourcesContent":["/**\n * 本文件用于loader的实现\n */\n\n/*!\n * Dependencies\n */\nvar path = require('path');\n\n/**\n * 静态资源加载器\n * @param js 压缩js路径\n * @param css 压缩css路径\n */\nvar Loader = function (js, css) {\n  if (!(this instanceof Loader)) {\n    return new Loader(js, css);\n  }\n\n  var target = {};\n  if (js) {\n    target[path.extname(js)] = js;\n  }\n\n  if (css) {\n    target[path.extname(css)] = css;\n  }\n\n  this.script = {\n    assets: [],\n    target: target[\".js\"]\n  };\n  this.style = {\n    assets: [],\n    target: target[\".css\"]\n  };\n};\n\n/**\n * 加载js文件\n * @param {String} src js文件相对项目根目录的路径\n */\nLoader.prototype.js = function (src) {\n  this.script.assets.push(src);\n  return this;\n};\n\n/**\n * 加载css文件\n * @param {String} href css文件相对项目根目录的路径\n */\nLoader.prototype.css = function (href) {\n  this.style.assets.push(href);\n  return this;\n};\n\nvar timestamp = (new Date()).getTime();\n\n/**\n * 生成开发环境下的标签\n */\nLoader.prototype.dev = function (prefix) {\n  var html = '';\n  prefix = prefix || '';\n  var version = '?v=' + timestamp;\n\n  var i;\n  for (i = 0; i < this.script.assets.length; i++) {\n    html += '<script src=\"' + prefix + this.script.assets[i] + version + '\"></script>\\n';\n  }\n  for (i = 0; i < this.style.assets.length; i++) {\n    html += '<link rel=\"stylesheet\" href=\"' + prefix + this.style.assets[i] + version + '\" media=\"all\" />\\n';\n  }\n\n  return html;\n};\n\n/**\n * 生成线上环境下的标签\n * @param {Object} CDNMap 通过Loader.scanDir() => Loader.minify() => Loader.map()得到的map文件\n * @param {String} prefix CDN前缀。如有CDN，可以一键切换文件到CDN中\n */\nLoader.prototype.pro = function (CDNMap, prefix) {\n  prefix = prefix || '';\n  var html = '';\n  var scriptTarget = this.script.target;\n  if (scriptTarget && CDNMap[scriptTarget]) {\n    html += '<script src=\"' + prefix + CDNMap[scriptTarget] + '\"></script>\\n';\n  }\n  var styleTarget = this.style.target;\n  if (styleTarget && CDNMap[styleTarget]) {\n    html += '<link rel=\"stylesheet\" href=\"' + prefix + CDNMap[styleTarget]  + '\" media=\"all\" />\\n';\n  }\n\n  return html;\n};\n\n/**\n * 根据环境和版本号去生成对应标签\n * 如果env没有传入，将取`process.env.NODE_ENV`作为判断，`production`为产品环境，其余将采用原始版本\n * @param {Object} CDNMap 通过Loader.scanDir() => Loader.minify() => Loader.map()得到的map文件\n * @param {String} prefix CDN前缀。如有CDN，可以一键切换文件到CDN中\n * @param {Boolean} env 是否启用压缩版\n */\nLoader.prototype.done = function (CDNMap, prefix, mini) {\n  // 优先级：1. 参数传入 2. 全局\n  CDNMap = CDNMap || Loader.CDNMap || {};\n\n  // prefix: 1. 参数传入 2. this.prefix 3. 全局\n  if (prefix === undefined) { // 可能传入 ''\n    prefix = this.prefix;\n  }\n\n  if (prefix === undefined) {\n    prefix = Loader.prefix;\n  }\n\n  if (prefix && prefix.endsWith('/')) {\n    prefix = prefix.slice(0, -1);\n  }\n\n  // mode\n  var mode;\n  if (mini !== undefined) { // 可能传入 0\n    mode = mini;\n  } else if (this.mini !== undefined) {\n    mode = this.mini;\n  } else if (Loader.mini !== undefined) {\n    mode = Loader.mini;\n  } else {\n    mode = process.env.NODE_ENV === \"production\";\n  }\n\n  return mode ? this.pro(CDNMap, prefix) : this.dev(prefix);\n};\n\nvar File = function (target) {\n  this.target = target;\n};\n\nFile.prototype.done = function (CDNMap, prefix, hashed) {\n  // 优先级：1. 参数传入 2. 全局\n  CDNMap = CDNMap || Loader.CDNMap || {};\n\n  // prefix: 1. 参数传入 2. 全局\n  if (prefix === undefined) { // 可能传入 ''\n    prefix = this.prefix;\n  }\n\n  if (prefix === undefined) {\n    prefix = Loader.prefix;\n  }\n\n  if (prefix && prefix.endsWith('/')) {\n    prefix = prefix.slice(0, -1);\n  }\n\n  prefix = prefix || '';\n\n  // mode\n  var mode;\n  if (hashed !== undefined) { // 可能传入 0\n    mode = hashed;\n  } else if (Loader.mini !== undefined) {\n    mode = Loader.mini;\n  } else {\n    mode = process.env.NODE_ENV === \"production\";\n  }\n\n  return prefix + (mode ? CDNMap[this.target] : this.target);\n};\n\nLoader.file = function (target) {\n  return new File(target);\n};\n\nmodule.exports = Loader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}